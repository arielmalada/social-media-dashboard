{"version":3,"sources":["services/api.js","services/users.js","pages/users/index.js","pages/users/users.js","store/actions/users.js","services/albums.js","services/post.js","store/actions/userDetail.js","components/common/postForm.js","components/common/modalEdit.js","components/common/postCard.js","pages/detailUser/index.js","pages/detailUser/detailUser.js","services/comments.js","store/actions/postDetail.js","components/common/commentCard.js","pages/detailPost/index.js","pages/detailPost/detailPost.js","components/albumDetail/modalPhoto.js","pages/albumDetail/index.js","pages/albumDetail/albumDetail.js","store/actions/albumDetail.js","components/common/navbar.js","layouts/default.js","404.js","App.js","serviceWorker.js","store/reducers/albumDetail.js","store/reducers/posts.js","store/reducers/userDetail.js","store/reducers/users.js","store/reducers/index.js","store/index.js","index.js"],"names":["BASE_URL","get","endpoint","axios","post","data","put","patch","deleteData","delete","getUsers","a","res","console","log","getUserDetail","id","Users","dispatch","useDispatch","useEffect","then","type","usersLists","useSelector","state","users","useState","listData","setList","className","map","item","name","to","Card","CardBody","getAlbums","getAlbumsDetail","getAlbumPhotos","getPost","getPostDetail","addPost","editPost","deletePost","addUserPostsAction","editUserPostsAction","deleteUserPostsAction","PostForm","props","userId","title","body","editAction","useForm","register","handleSubmit","reset","onSubmit","dataRes","catch","error","postId","setModal","round","size","defaultValue","placeholder","ModalEdit","rest","modal","toggle","Modal","isOpen","ModalHeader","ModalBody","PostCard","setModalData","UncontrolledDropdown","DropdownToggle","color","icon","faEllipsisV","DropdownMenu","right","DropdownItem","onClick","editUserPost","CardTitle","faUserFriends","CardText","children","DetailUser","useParams","userData","setUser","userPostsData","setPosts","userAlbumsData","setAlbums","modalData","userDetail","userPosts","posts","userAlbums","albums","Promise","all","getUserAlbumsAction","deleteUserPost","username","email","website","reversedPost","reverse","Row","Col","xs","md","faAt","faGlobe","album","getComments","addComment","editComment","deleteComment","editPostDetailAction","addPostCommentAction","editPostCommentAction","CommentCard","commentUserName","commentUserMail","commentBody","commentId","mode","reValidateMode","defaultValues","validateCriteriaMode","submitFocusError","nativeValidation","registerCard","handleSubmitCard","editCommentState","setEditCommentState","faEllipsisH","deletePostCommentAction","DetailPost","postData","setPost","postCommentsData","modalPost","setModalPost","modalPostData","setModalPostData","postDetail","postComments","comments","user","history","useHistory","getPostUserAction","fetchPostDetail","reversedComments","register1","handleSubmit1","reset1","onSubmitData","goBack","length","comment","ModalPhoto","url","src","alt","AlbumDetail","albumsId","albumData","setAlbumData","photosData","setPhotosData","albumDetail","albumPhotos","photos","albumId","tag","photo","thumbnailUrl","NavigationBar","Navbar","light","expand","faChevronLeft","NavbarBrand","DefaultLayout","Container","Page404","App","exact","path","component","Boolean","window","location","hostname","match","initialState","action","filter","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f7188c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com'\n\nexport const get = async (endpoint) => axios.get(`${BASE_URL}/${endpoint}`);\n\nexport const post = async (endpoint, data) => axios.post(`${BASE_URL}/${endpoint}`, data);\n\nexport const put = async (endpoint, data) => axios.put(`${BASE_URL}/${endpoint}`, data);\n\nexport const patch = async (endpoint, data) => axios.patch(`${BASE_URL}/${endpoint}`, data);\n\nexport const deleteData = async (endpoint) => axios.delete(`${BASE_URL}/${endpoint}`);\n\n","import { get } from \"./api\";\n\nexport const getUsers = async () => {\n  try {\n    const res = await get('users');\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getUserDetail = async (id) => {\n  try {\n    const res = await get(`users/${id}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}","import Users from \"./users\";\n\nexport default Users;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { fetchUsers } from \"../../store/actions/users\"\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const usersLists = useSelector(\n    (state) => state.users.data\n  );\n\n  const [listData, setList] = useState([]);\n  useEffect(() => {\n    if (usersLists) return setList(usersLists);\n  }, [usersLists]);\n  return ( \n    <div>\n      <h1 className=\"text-center\">Social Media Dashboard</h1>\n      {\n        listData.map((item) => {\n          const { id, name } = item;\n          return (\n            <Link to={`/user/${id}`}>\n              <Card key={id} className=\"m-2\">\n                <CardBody>{name}</CardBody>\n              </Card>\n            </Link>\n          )\n        })\n      }\n    </div>\n   );\n}\n \nexport default Users;","import { getUsers } from \"../../services/users\";\n\nexport const getUsersAction = (data) => {\n  return { type: 'GET_USERS', data: data };\n};\n\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    getUsers().then(\n      (res) => {\n        return dispatch(getUsersAction(res.data));\n      }\n    );\n  }\n}","import { get } from \"./api\";\n\nexport const getAlbums = async (id) => {\n  try {\n    const res = await get(`users/${id}/albums`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getAlbumsDetail = async (id) => {\n  try {\n    const res = await get(`albums/${id}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getAlbumPhotos = async (id) => {\n  try {\n    const res = await get(`albums/${id}/photos`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { get, post, patch, deleteData } from \"./api\";\n\nexport const getPost = async (id) => {\n  try {\n    const res = await get(`users/${id}/posts`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getPostDetail = async (id) => {\n  try {\n    const res = await get(`posts/${id}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const addPost = async (data) => {\n  try {\n    const res = await post('posts', data);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const editPost = async (id, data) => {\n  try {\n    const res = await patch(`posts/${id}`, data);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const deletePost = async (id) => {\n  try {\n    const res = await deleteData(`posts/${id}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n","import { getAlbums } from \"../../services/albums\";\nimport { getPost } from \"../../services/post\";\nimport { getUserDetail } from \"../../services/users\";\n\nexport const getUserDetailAction = (data) => {\n  return { type: 'GET_USER_DETAIL', data: data };\n};\n\nexport const getUserPostsAction = (data) => {\n  return { type: 'GET_USER_POSTS', data: data };\n};\n\nexport const getUserAlbumsAction = (data) => {\n  return { type: 'GET_USER_ALBUMS', data: data };\n};\n\nexport const addUserPostsAction = (data) => {\n  return { type: 'ADD_USER_POSTS', data: data };\n};\n\nexport const editUserPostsAction = (id, data) => {\n  return { type: 'EDIT_USER_POSTS', id: id, data: data };\n};\n\nexport const deleteUserPostsAction = (id) => {\n  return { type: 'DELETE_USER_POSTS', id: id };\n};\n\nexport const fetchUserDetail = (id) => {\n  return (dispatch) => {\n    const userData = async (id) => await Promise.all([\n      getUserDetail(id),\n      getPost(id),\n      getAlbums(id)\n    ]);\n    userData(id).then(\n      (res) => {\n        return (\n          dispatch(getUserDetailAction({ ...res[0].data })),\n          dispatch(getUserPostsAction([...res[1].data])),\n          dispatch(getUserAlbumsAction([...res[2].data]))\n        )\n      }\n    );\n  }\n}","import { Card, CardBody } from \"reactstrap\";\nimport { addPost, editPost } from \"../../services/post\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { addUserPostsAction } from \"../../store/actions/userDetail\";\nimport Avatar from \"react-avatar\";\n\nconst PostForm = (props) => {\n  const {name, userId, type, title='', body ='', editAction} = props;\n  const dispatch = useDispatch();\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = async (id, data) => {\n    switch (type) {\n      case 'post' : {\n        const dataRes = {\n          id: id,\n          ...data\n        }\n        return addPost(dataRes).then(\n          (res) => {\n            reset({title: '', body: ''})\n            return dispatch(addUserPostsAction(res.data))\n          }\n        ).catch(\n          (error) => console.log(error)\n        )\n      }\n      case 'edit' : {\n        const { postId, setModal } = props;\n        setModal(false);\n        return editPost(postId, data).then(\n          (res) => { \n            reset({title: '', body: ''});\n            return dispatch(editAction(postId, res.data));\n          }\n        ).catch(\n          (error) => console.log(error)\n        )\n      }\n      default:\n        return null;\n        \n    }\n  }\n  return (\n    <Card>\n      <CardBody>\n        <form onSubmit={handleSubmit((data) => onSubmit(userId, data))}>\n          <div className=\"d-flex flex-row mb-3 align-items-center\">\n            <div>\n              <Avatar name={name} round className=\"mr-2\" size=\"48\" />\n            </div>\n            <div className=\"w-100\">\n              <input {...register(\"title\")} defaultValue={title} className=\"form-control mb-2\" placeholder=\"title\" />\n              <textarea {...register(\"body\")} defaultValue={body} className=\"form-control\" placeholder=\"what's on your mind\" />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">Post</button>\n        </form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PostForm;","import {  Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PostForm from './postForm';\n\nconst ModalEdit = (props) => {\n  const { className, ...rest } = props;\n  const { modal, setModal } = rest;\n  const toggle = () => setModal(false);\n  return (\n    <Modal isOpen={modal} toggle={toggle} className={className}>\n      <ModalHeader toggle={toggle}>Edit Post</ModalHeader>\n      <ModalBody>\n        <PostForm {...rest} type='edit' />\n      </ModalBody>\n    </Modal>\n  );\n}\n\nexport default ModalEdit;","import { faEllipsisV, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Avatar from \"react-avatar\";\nimport { Card, CardBody, CardText, CardTitle, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\n\n\nconst PostCard = (props) => {\n  const { \n    name, \n    userId, \n    id, \n    title, \n    body, \n    setModal, \n    setModalData, \n    className ='',\n    deletePost\n  } = props;  \n  const editUserPost = (id, title, body) => {\n    setModal(true);\n    const props = {\n      userId,\n      name,\n      title,\n      body,\n      postId: id\n    }\n    setModalData(props);\n  }\n  return (\n    <Card className={className}>\n      <CardBody>\n        <div className=\"float-right\">\n          <UncontrolledDropdown>\n            <DropdownToggle color=\"link\">\n              <FontAwesomeIcon icon={faEllipsisV} size=\"xs\" />\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem onClick={() => editUserPost(id, title, body)}>Edit</DropdownItem>\n              <DropdownItem onClick={() => deletePost(id)}>Delete</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n        <CardTitle className=\"d-flex\">\n          <Avatar name={name} round className=\"mr-2\" size=\"48\" />\n          <span>\n            <div>{name}</div>\n            <div><FontAwesomeIcon icon={faUserFriends} size=\"xs\" /></div>\n          </span>\n        </CardTitle>\n        <CardText className=\"font-weight-bold\">{title}</CardText>\n        <CardText>{body}</CardText>\n        {props.children}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PostCard;","import DetailUser from \"./detailUser\";\n\nexport default DetailUser;","import { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from 'react-router-dom';\nimport { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\nimport { fetchUserDetail, editUserPostsAction, deleteUserPostsAction } from \"../../store/actions/userDetail\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAt, faGlobe } from '@fortawesome/free-solid-svg-icons'\nimport Avatar from \"react-avatar\";\nimport PostForm from \"../../components/common/postForm\";\nimport ModalEdit from \"../../components/common/modalEdit\";\nimport PostCard from \"../../components/common/postCard\";\nimport { deletePost } from \"../../services/post\";\n\nconst DetailUser = () => {\n  const { userId } = useParams();\n  const [userData, setUser] = useState(null);\n  const [userPostsData, setPosts] = useState([]);\n  const [userAlbumsData, setAlbums] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [modalData, setModalData] = useState(false);\n\n  const {\n    data: userDetail,\n    posts: userPosts,\n    albums: userAlbums\n  } = useSelector((state) => state.userDetail);\n\n  useEffect(() => {\n    if (userDetail) setUser(userDetail);\n    if (userPosts) setPosts(userPosts);\n    if (userAlbums) setAlbums(userAlbums);\n  }, [userDetail, userPosts, userAlbums]);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUserDetail(userId));\n  }, [dispatch, userId]);\n\n  const deleteUserPost = (id) => {\n    deletePost(id).then(\n      (res) =>\n        dispatch(deleteUserPostsAction(id))\n    ).catch(\n      (error) => console.log(error)\n    )\n  };\n\n  const {\n    name = '',\n    username = '',\n    email = '',\n    website = ''\n  } = { ...userData };\n  const reversedPost = [...userPostsData].reverse();\n\n  return (\n    <Fragment>\n      <div className=\"text-center\">\n        <div>\n          <Avatar name={name} round />\n        </div>\n        {name} ( {username} )\n      </div>\n      <Row>\n        <Col xs={12} md={5}>\n          <Card className=\"my-2\">\n            <CardBody>\n              <CardTitle>Intro</CardTitle>\n              <div><FontAwesomeIcon icon={faAt} /> {email}</div>\n              <div><FontAwesomeIcon icon={faGlobe} /> {website}</div>\n            </CardBody>\n          </Card>\n          <Card className=\"my-2\">\n            <CardBody>\n              <CardTitle className=\"d-flex justify-content-between\">Albums</CardTitle>\n              <Row className=\"no-gutters\">\n                {\n                  userAlbumsData.map((album) => {\n                    const { id, title } = album\n                    return (\n                      <Col xs={4} key={id} className=\"text-truncate text-center mb-2\">\n                        <Link to={`/user/${userId}/albums/${id}`}>\n                          <Avatar name={title} />\n                        </Link>\n                      </Col>\n                    )\n                  })\n                }\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col>\n          <PostForm userId={userId} name={name} type='post' />\n          {\n            reversedPost.map((post) => {\n              const { id } = post;\n              return (\n                <PostCard\n                  key={id}\n                  className=\"my-2\" {...post}\n                  name={name}\n                  setModal={setModal}\n                  setModalData={setModalData}\n                  deletePost={deleteUserPost}\n                >\n                  <Link to={`/user/${userId}/post/${id}`} className=\"float-right\">Comments</Link>\n                </PostCard>\n              )\n            })\n          }\n        </Col>\n      </Row>\n      { modal && <ModalEdit modal={modal} setModal={setModal} {...modalData} editAction={editUserPostsAction} />}\n    </Fragment>\n  );\n}\n\nexport default DetailUser;","import { get, post, put, deleteData  } from \"./api\";\n\nexport const getComments = async (id) => {\n  try {\n    const res = await get(`posts/${id}/comments`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const addComment = async (data) => {\n  try {\n    const res = await post('comments', data);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const editComment = async (id, data) => {\n  try {\n    const res = await put(`comments/${id}`, data);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const deleteComment = async (id) => {\n  try {\n    const res = await deleteData(`comments/${id}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}","import { getComments } from \"../../services/comments\";\nimport { getPostDetail } from \"../../services/post\";\nimport { getUserDetail } from \"../../services/users\";\n\nexport const getPostDetailAction = (data) => {\n  return { type: 'GET_POST', data: data };\n};\n\nexport const editPostDetailAction = (id, data) => {\n  return { type: 'EDIT_POST', data: data };\n};\n\nexport const getPostCommentsAction = (data) => {\n  return { type: 'GET_POST_COMMENTS', data: data };\n};\n\nexport const getPostUserAction = (data) => {\n  return { type: 'GET_POST_USER', data: data };\n};\n\nexport const addPostCommentAction = (data) => {\n  return { type: 'ADD_POST_COMMENTS', data: data };\n};\n\nexport const editPostCommentAction = (id, data) => {\n  return { type: 'EDIT_POST_COMMENTS', id: id, data: data };\n};\n\nexport const deletePostCommentAction = (id) => {\n  return { type: 'DELETE_POST_COMMENTS', id: id };\n};\n\n\nexport const fetchPostDetail =  (userId, postId) => {\n  return (dispatch) => {\n    const postData = async (userId, postId) => await Promise.all([\n      getPostDetail(postId),\n      getComments(postId),\n      getUserDetail(userId)\n    ]);\n    postData(userId, postId).then(\n      (res) => {\n        return (\n          dispatch(getPostDetailAction({ ...res[0].data })),\n          dispatch(getPostCommentsAction([...res[1].data])),\n          dispatch(getPostUserAction({...res[2].data}))\n        )\n      }\n    );\n  }\n}","import { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, CardBody, CardText, CardTitle, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\nimport { deleteComment, editComment } from \"../../services/comments\";\nimport { deletePostCommentAction, editPostCommentAction } from \"../../store/actions/postDetail\";\n\nconst CommentCard = (props) => {\n  const dispatch = useDispatch();\n  const { name: commentUserName, email: commentUserMail, body: commentBody, id: commentId, postId } = props;\n  const { register: registerCard, handleSubmit: handleSubmitCard } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onChange\",\n    defaultValues: \"\",\n    validateCriteriaMode: \"all\",\n    submitFocusError: true,\n    nativeValidation: false,\n  });\n  const [editCommentState, setEditCommentState] = useState(false);\n  const onSubmit = async (id, data) => {\n    const dataRes = {\n      postId: postId,\n      id: commentId,\n      name: commentUserName,\n      email: commentUserMail,\n      ...data\n    }\n    return editComment(id, dataRes).then(\n      (res) => {\n        setEditCommentState(false);\n        return dispatch(editPostCommentAction(id, res.data));\n      }\n    ).catch(\n      (error) => console.log(error)\n    )\n\n  }\n  const deleteCommentPost = (id) => deleteComment().then(\n    (res) =>\n      dispatch(deletePostCommentAction(id))\n  ).catch(\n    (error) => console.log(error)\n  )\n\n  return (\n    <div className=\"d-flex my-2\">\n      <Avatar name={commentUserMail} round className=\"mr-2\" size=\"48\" />\n      <div className=\"w-100\">\n        <Card>\n          <CardBody>\n            <CardTitle className=\"font-weight-bold\">\n              {commentUserName}\n            </CardTitle>\n            <CardText>\n              {\n                !editCommentState ?\n                  commentBody :\n                  <form className=\"form-inline\" onSubmit={handleSubmitCard((data) => onSubmit(commentId, data))}>\n                    <textarea {...registerCard(\"body\")} defaultValue={commentBody} className=\"form-control w-100\" placeholder=\"what's on your mind\" />\n                    <div className=\"d-flex flex-row-reverse flex-grow w-100 m-2\">\n                      <button type=\"submit\" className=\"btn btn-primary mx-2\">Post</button>\n                      <button className=\"btn btn-danger mx-2\" onClick={() => setEditCommentState(false)}>Cancel</button>\n                    </div>\n                  </form>\n              }\n            </CardText>\n          </CardBody>\n        </Card>\n      </div>\n      <div className=\"d-flex align-items-center ml-3\">\n        <UncontrolledDropdown>\n          <DropdownToggle color=\"link\">\n            <FontAwesomeIcon icon={faEllipsisH} size=\"xs\" />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem onClick={() => setEditCommentState(true)}>Edit</DropdownItem>\n            <DropdownItem onClick={() => deleteCommentPost(commentId)}>Delete</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    </div>\n  )\n}\n\nexport default CommentCard;","import DetailPost from \"./detailPost\";\n\nexport default DetailPost;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { fetchPostDetail, editPostDetailAction, addPostCommentAction } from \"../../store/actions/postDetail\";\nimport ModalEdit from \"../../components/common/modalEdit\";\nimport PostCard from \"../../components/common/postCard\";\nimport CommentCard from \"../../components/common/commentCard\";\nimport { deleteUserPostsAction } from \"../../store/actions/userDetail\";\nimport { deletePost } from \"../../services/post\";\nimport { useForm } from \"react-hook-form\";\nimport Avatar from \"react-avatar\";\nimport { addComment } from \"../../services/comments\";\n\nconst DetailPost = () => {\n  const { userId, postId } = useParams();\n  const [postData, setPost] = useState(null);\n  const [userData, setUser] = useState(null);\n  const [postCommentsData, setPosts] = useState([]);\n  const [modalPost, setModalPost] = useState(false);\n  const [modalPostData, setModalPostData] = useState(false);\n\n  const {\n    data: postDetail,\n    comments: postComments,\n    user: userDetail\n  } = useSelector((state) => state.postDetail);\n\n  useEffect(() => {\n    if (postDetail) setPost(postDetail);\n    if (userDetail) setUser(userDetail);\n    if (postComments) setPosts(postComments);\n  }, [postDetail, userDetail, postComments]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack()\n  }\n  const deletePostDetail = (id) => {\n    deletePost(id).then(\n      (res) => {\n        dispatch(deleteUserPostsAction(id))\n        return (goBack())\n      }\n    ).catch(\n      (error) => console.log(error)\n    )\n  };\n\n\n  useEffect(() => {\n    dispatch(fetchPostDetail(userId, postId));\n  }, [dispatch, postId, userId]);\n  const { name, email } = { ...userData };\n  const reversedComments = [...postCommentsData].reverse();\n\n  const { register:register1, handleSubmit:handleSubmit1, reset:reset1 } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onChange\",\n    defaultValues: \"\",\n    validateCriteriaMode: \"all\",\n    submitFocusError: true,\n    nativeValidation: false,\n  });\n  const onSubmitData = async (data) => {\n    const dataRes = {\n      postId: postId,\n      name: name,\n      email: email,\n      ...data\n    }\n    return addComment(dataRes).then(\n      (res) => {\n        reset1({ body: '' });\n        return dispatch(addPostCommentAction(res.data));\n      }\n    ).catch(\n      (error) => console.log(error)\n    )\n\n  }\n  return (\n    <div className=\"my-2\">\n      <PostCard\n        {...postData}\n        name={name}\n        setModal={setModalPost}\n        setModalData={setModalPostData}\n        deletePost={deletePostDetail}\n      >\n        <div className=\"d-flex flex-row-reverse\">\n          <div>{postCommentsData.length} Comments</div>\n        </div>\n        <div className=\"py-3\">\n          <form id=\"hook-form\" onSubmit={handleSubmit1((data) => onSubmitData(data))}>\n            <div className=\"d-flex flex-row mb-3 align-items-center\">\n              <div>\n                <Avatar name={name} round className=\"mr-2\" size=\"48\" />\n              </div>\n              <div className=\"w-100\">\n                <input {...register1(\"body\")} className=\"form-control mb-2\" placeholder=\"add a comment\" />\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Post</button>\n          </form>\n          {reversedComments.map((comment) => <CommentCard {...comment} postId={postId} />)}\n        </div>\n      </PostCard>\n\n      { modalPost && <ModalEdit modal={modalPost} setModal={setModalPost} {...modalPostData} editAction={editPostDetailAction} />}\n\n    </div>\n  );\n}\n\nexport default DetailPost;","import { Modal, ModalBody, ModalHeader } from \"reactstrap\";\n\nconst ModalPhoto = ({modal, setModal, modalData}) => {\n  const { title, url } = modalData;\n  const toggle = () => setModal(false);\n  return (\n    <Modal isOpen={modal} toggle={toggle} size=\"lg\">\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\n      <ModalBody  className=\"text-center\" >\n        <img src={url} alt={title}/>\n      </ModalBody>\n    </Modal>\n  );\n}\n\nexport default ModalPhoto;","import AlbumDetail from \"./albumDetail\";\n\nexport default AlbumDetail;","import { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\nimport { fetchAlbumsDetail } from \"../../store/actions/albumDetail\";\nimport ModalPhoto from \"../../components/albumDetail/modalPhoto\";\n\nconst AlbumDetail = () => {\n  const { albumsId } = useParams();\n  const [albumData, setAlbumData] = useState({});\n  const [photosData, setPhotosData] = useState([]);\n\n  const [modal, setModal] = useState(false);\n  const [modalData, setModalData] = useState(false);\n  const toggle = (title, url) => {\n    setModalData({ title, url });\n    setModal(true);\n  }\n\n  const {\n    data: albumDetail,\n    photos: albumPhotos\n  } = useSelector((state) => state.albumDetail);\n  useEffect(() => {\n    if (albumDetail) setAlbumData(albumDetail);\n    if (albumPhotos) setPhotosData(albumPhotos);\n  }, [albumPhotos, albumDetail]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAlbumsDetail(albumsId));\n  }, [dispatch, albumsId]);\n\n  const { title } = albumData;\n  return (\n    <Fragment>\n      <Card className=\"my-2\">\n        <CardBody>\n          <CardTitle tag=\"h2\">{title} Photos</CardTitle>\n          <Row className=\"no-gutters\">\n            {\n              photosData.map((photo) => {\n                const { id, title, thumbnailUrl, url } = photo\n                return (\n                  <Col xs={6} md={3} key={id} className=\"text-truncate text-center mb-2\">\n                    <img src={thumbnailUrl} alt={title} onClick={() => toggle(title, url)} />\n                  </Col>\n                )\n              })\n            }\n          </Row>\n        </CardBody>\n      </Card>\n      {modal && <ModalPhoto modal={modal} setModal={setModal} modalData={modalData} />}\n    </Fragment>\n  );\n}\n\nexport default AlbumDetail;","import { getAlbumsDetail, getAlbumPhotos } from \"../../services/albums\";\n\nexport const getAlbumDetailAction = (data) => {\n  return { type: 'GET_ALBUM_DETAIL', data: data };\n};\n\nexport const getAlbumPhotosAction = (data) => {\n  return { type: 'GET_ALBUM_PHOTOS', data: data };\n};\n\n\nexport const fetchAlbumsDetail = (albumId) => {\n  return (dispatch) => {\n    const albumData = async (albumId) => await Promise.all([\n      getAlbumsDetail(albumId),\n      getAlbumPhotos(albumId),\n    ]);\n    albumData(albumId).then(\n      (res) => {\n        return (\n          dispatch(getAlbumDetailAction({ ...res[0].data }),\n            dispatch(getAlbumPhotosAction([...res[1].data])),\n          )\n        );\n      }\n    )\n  }\n}","import { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\n\nconst NavigationBar = () => {\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack()\n  }\n  return (\n    <Navbar light expand=\"md\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={goBack}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <NavbarBrand className=\"ml-auto\">\n        Pacebo-ok\n      </NavbarBrand>\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;","import { Container } from \"reactstrap\";\nimport NavigationBar from \"../components/common/navbar\";\n\nconst DefaultLayout = (props) => {\n  return ( \n    <div>\n      <NavigationBar />\n      <Container>\n        {props.children}\n      </Container>\n    </div>\n   );\n}\n \nexport default DefaultLayout;","const Page404 = () => {\n  return ( <div>404</div> );\n}\n \nexport default Page404;","import React from 'react';\n\nimport './styles/index.scss';\nimport { BrowserRouter, MemoryRouter, Route, Switch } from 'react-router-dom';\nimport Users from './pages/users/';\nimport DetailUser from './pages/detailUser/';\nimport DetailPost from './pages/detailPost/';\nimport AlbumDetail from './pages/albumDetail';\nimport DefaultLayout from './layouts/default';\nimport Page404 from './404';\n\nfunction App() {\n  return (\n    <DefaultLayout>\n      <Switch>\n        <Route exact path='/' component={Users} />\n        <Route exact path='/user/:userId' component={DetailUser} />\n        <Route path='/user/:userId/post/:postId/' component={DetailPost} />\n        <Route exact path='/user/:userId/albums/:albumsId' component={AlbumDetail} />\n        <Route path='*' exact component={Page404} />\n      </Switch>\n    </DefaultLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  data: null,\n  photos: null,\n};\n\nconst albumDetail = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ALBUM_DETAIL':\n      return {\n        ...state\n        , data: action.data\n      };\n    case 'GET_ALBUM_PHOTOS':\n      return {\n        ...state\n        , photos: action.data\n      };\n    default:\n      return state;\n  }\n}\n\nexport default albumDetail;","const initialState = {\n  data: null,\n  comments: null,\n  user: null\n};\n\nconst users = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_POST':\n      return {\n        ...state\n        , data: { ...action.data }\n      };\n    case 'EDIT_POST':\n      return {\n        ...state\n        , data: { ...action.data }\n      };\n    case 'GET_POST_USER':\n      return {\n        ...state\n        , user: { ...action.data }\n      };\n    case 'GET_POST_COMMENTS':\n      return {\n        ...state\n        , comments: [...action.data]\n      };\n    case 'ADD_POST_COMMENTS':\n      return {\n        ...state\n        , comments: [...state.comments, action.data]\n      };\n    case 'EDIT_POST_COMMENTS':\n      return {\n        ...state\n        , comments: [...state.comments].map((comment) => comment.id === action.id ? action.data : comment)\n      };\n    case 'DELETE_POST_COMMENTS':\n      return {\n        ...state\n        , comments: [...state.comments].filter((comment) => comment.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nexport default users;","const initialState = {\n  data: null,\n  posts: null,\n  albums: null\n};\n\nconst userDetail = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USER_DETAIL':\n      return {\n        ...state\n        , data: action.data\n      };\n    case 'GET_USER_POSTS':\n      return {\n        ...state\n        , posts: action.data\n      };\n    case 'GET_USER_ALBUMS':\n      return {\n        ...state\n        , albums: action.data\n      };\n    case 'ADD_USER_POSTS':\n      return {\n        ...state\n        , posts: [...state.posts, action.data]\n      };\n    case 'EDIT_USER_POSTS':\n      return {\n        ...state\n        , posts: [...state.posts].map((post)=> post.id === action.id ? action.data : post)\n      };\n    case 'DELETE_USER_POSTS':\n      return {\n        ...state\n        , posts: [...state.posts].filter((post) => post.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nexport default userDetail;","const initialState = {\n  data: null,\n};\n\nconst users = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USERS':\n      return {\n        ...state\n        ,data: [...action.data]\n      };\n    default:\n      return state;\n  }\n}\n\nexport default users;","import { combineReducers } from \"redux\";\nimport albumDetail from \"./albumDetail\";\nimport postDetail from \"./posts\";\nimport userDetail from \"./userDetail\";\nimport users from \"./users\";\n\nexport default combineReducers({\n  users: users,\n  userDetail: userDetail,\n  postDetail: postDetail,\n  albumDetail: albumDetail\n  });","import { createStore, applyMiddleware  } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from \"./reducers\"\n\nconst store = createStore(reducer,composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}